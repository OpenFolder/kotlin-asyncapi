{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'email' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/info/Contact.kt",
      "language": "kotlin",
      "line": 9,
      "offset": 9,
      "length": 5,
      "code": {
        "startLine": 7,
        "length": 5,
        "offset": 65,
        "surroundingCode": "    var name: String? = null\n    var url: String? = null\n    var email: String? = null\n\n    fun name(value: String): String ="
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "cefe766bcb5084b0837f58e476cdc9103b8ff38fd7bf79fa75927aa04c8de8e2"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"example\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/MessageExample.kt",
      "language": "kotlin",
      "line": 7,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 5,
        "length": 7,
        "offset": 92,
        "surroundingCode": "@AsyncApiComponent\nclass MessageExamplesList : ArrayList<MessageExample>() {\n    inline fun example(build: MessageExample.() -> Unit): MessageExample =\n        MessageExample().apply(build).also { add(it) }\n}"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "d669d04175ca1750046fb7566cb673224d23d1a5344b1c895507bb9dd8525df9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"schemaRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/Parameter.kt",
      "language": "kotlin",
      "line": 28,
      "offset": 16,
      "length": 9,
      "code": {
        "startLine": 26,
        "length": 9,
        "offset": 67,
        "surroundingCode": "        Schema().apply(build).also { schema = it }\n\n    inline fun schemaRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { schema = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "bf0cf4d313a99406abfcfa2ad1d4ef983434177bf4c7f36ce495275cc6272225"
}]}