{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'heartBeatInterval' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 148,
      "offset": 13,
      "length": 17,
      "code": {
        "startLine": 146,
        "length": 17,
        "offset": 100,
        "surroundingCode": "        var cipherSpec: String? = null\n        var multiEndpointServer: Boolean? = null\n        var heartBeatInterval: Int? = null\n        var bindingVersion: String? = null\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "086dda0681d34b7990aea59deffc91212b38b43e7afb98d262f281cbd90b6fe3"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'cleanSession' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 92,
      "offset": 13,
      "length": 12,
      "code": {
        "startLine": 90,
        "length": 12,
        "offset": 82,
        "surroundingCode": "    class MQTT : ServerBinding {\n        var clientId: String? = null\n        var cleanSession: Boolean? = null\n        var lastWill: LastWill? = null\n        var keepAlive: Int? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "d2fa876d6bd04f0fa107093375bd37097c3e2b1b9b3c87aa5a894fbae59aeffe"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'retain' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 116,
      "offset": 17,
      "length": 6,
      "code": {
        "startLine": 114,
        "length": 6,
        "offset": 89,
        "surroundingCode": "            var qos: Int? = null\n            var message: String? = null\n            var retain: Boolean? = null\n\n            fun topic(value: String): String ="
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "dc3d24ceeee000d328913b66c9a85d3b348a95f35831c63c301425b934e19b2a"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'cipherSpec' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 146,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 144,
        "length": 10,
        "offset": 97,
        "surroundingCode": "        var groupId: String? = null\n        var ccdtQueueManagerName: String? = null\n        var cipherSpec: String? = null\n        var multiEndpointServer: Boolean? = null\n        var heartBeatInterval: Int? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "beaab5596741ffd7e4fd00b94714baa61623b8908380388b7524c1db2b6c8358"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'qos' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 114,
      "offset": 17,
      "length": 3,
      "code": {
        "startLine": 112,
        "length": 3,
        "offset": 79,
        "surroundingCode": "        class LastWill {\n            var topic: String? = null\n            var qos: Int? = null\n            var message: String? = null\n            var retain: Boolean? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "953a75a380dffeecf8438d27c4da69f247069972e992afa8d31124e981cb50af"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'ccdtQueueManagerName' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 145,
      "offset": 13,
      "length": 20,
      "code": {
        "startLine": 143,
        "length": 20,
        "offset": 82,
        "surroundingCode": "    class IBMMQ : ServerBinding {\n        var groupId: String? = null\n        var ccdtQueueManagerName: String? = null\n        var cipherSpec: String? = null\n        var multiEndpointServer: Boolean? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "cd40d765f70e08e938cae983d2bf995570ff68a7de6da39858f4358de77780f6"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'clientId' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 91,
      "offset": 13,
      "length": 8,
      "code": {
        "startLine": 89,
        "length": 8,
        "offset": 46,
        "surroundingCode": "\n    class MQTT : ServerBinding {\n        var clientId: String? = null\n        var cleanSession: Boolean? = null\n        var lastWill: LastWill? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "d8ac38881f60e3bd315f61eef2daaf08085d22f8a1e5e1b583001c935d43e743"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'msgVpn' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 134,
      "offset": 13,
      "length": 6,
      "code": {
        "startLine": 132,
        "length": 6,
        "offset": 90,
        "surroundingCode": "    class Solace : ServerBinding {\n        var bindingVersion: String? = null\n        var msgVpn: String? = null\n\n        fun bindingVersion(value: String): String ="
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "42d733a311b482b272505a811425436fecbc0a60d73eb29aa5988d0be72e1f25"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'keepAlive' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 94,
      "offset": 13,
      "length": 9,
      "code": {
        "startLine": 92,
        "length": 9,
        "offset": 93,
        "surroundingCode": "        var cleanSession: Boolean? = null\n        var lastWill: LastWill? = null\n        var keepAlive: Int? = null\n        var bindingVersion: String? = null\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "dd1ea010be0e467efde6f7efe85c967e776698e360515188a6302bddfc813358"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'multiEndpointServer' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 147,
      "offset": 13,
      "length": 19,
      "code": {
        "startLine": 145,
        "length": 19,
        "offset": 100,
        "surroundingCode": "        var ccdtQueueManagerName: String? = null\n        var cipherSpec: String? = null\n        var multiEndpointServer: Boolean? = null\n        var heartBeatInterval: Int? = null\n        var bindingVersion: String? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "a324da230f559de00a410666f05795d957e1fca6fada32560aacb1237ebaa10f"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'groupId' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 144,
      "offset": 13,
      "length": 7,
      "code": {
        "startLine": 142,
        "length": 7,
        "offset": 47,
        "surroundingCode": "\n    class IBMMQ : ServerBinding {\n        var groupId: String? = null\n        var ccdtQueueManagerName: String? = null\n        var cipherSpec: String? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "a97e844eb59e685d3709103fff80df70ba8b55bbeca729e52c446f202c30ed07"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'topic' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 113,
      "offset": 17,
      "length": 5,
      "code": {
        "startLine": 111,
        "length": 5,
        "offset": 42,
        "surroundingCode": "\n        class LastWill {\n            var topic: String? = null\n            var qos: Int? = null\n            var message: String? = null"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "e8dfb0302dbf11e2c50c3352daeb9300f6bacaead1ab2ec9aba75e4331b5d6bc"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"groupId\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 114,
      "offset": 20,
      "length": 7,
      "code": {
        "startLine": 112,
        "length": 7,
        "offset": 63,
        "surroundingCode": "        var bindingVersion: String? = null\n\n        inline fun groupId(build: Schema.() -> Unit): Schema =\n            Schema().apply(build).also { groupId = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "241bfd14fdf423e7cbfaa6e3762332240ad1eb42b0ba06b15dff03f26e2d78f0"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"query\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 99,
      "offset": 20,
      "length": 5,
      "code": {
        "startLine": 97,
        "length": 5,
        "offset": 59,
        "surroundingCode": "            value.also { method = it }\n\n        inline fun query(build: Schema.() -> Unit): Schema =\n            Schema().apply(build).also { query = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f4d57bc63459fc3422ee93f505653e87e23375ef832d2760f2922ba35cafaf26"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"stomp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 74,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 72,
        "length": 5,
        "offset": 76,
        "surroundingCode": "        OperationBinding.SQS.apply(build).also { sqs = it }\n\n    inline fun stomp(build: OperationBinding.STOMP.() -> Unit): OperationBinding.STOMP =\n        OperationBinding.STOMP.apply(build).also { stomp = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b9116fd9dd45d76ef567f573c41430bde383e97713608336479f25c5e9f86fc3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"mandatory\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 158,
      "offset": 13,
      "length": 9,
      "code": {
        "startLine": 156,
        "length": 9,
        "offset": 58,
        "surroundingCode": "            value.also { deliveryMode = it }\n\n        fun mandatory(value: Boolean): Boolean =\n            value.also { mandatory = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "5ccebc3b2e50523d80a66c9b1554213f234a7a534f55d87d8a04522e22cfa13d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"sns\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 65,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 63,
        "length": 3,
        "offset": 76,
        "surroundingCode": "        OperationBinding.JMS.apply(build).also { jms = it }\n\n    inline fun sns(build: OperationBinding.SNS.() -> Unit): OperationBinding.SNS =\n        OperationBinding.SNS.apply(build).also { sns = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "2679ee33545e27b60defc1a7923700d050bcbdffa1964b07c8af889d6a293f08"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"deliveryMode\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 155,
      "offset": 13,
      "length": 12,
      "code": {
        "startLine": 153,
        "length": 12,
        "offset": 54,
        "surroundingCode": "            value.also { priority = it }\n\n        fun deliveryMode(value: Int): Int =\n            value.also { deliveryMode = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "96d265d46cd226eb4d6a5ec6037512b5d4406f5e381618304f86d8c6e1a9449a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"topicSubscriptions\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 259,
      "offset": 17,
      "length": 18,
      "code": {
        "startLine": 257,
        "length": 18,
        "offset": 74,
        "surroundingCode": "            var topicSubscriptions: List<String>? = null\n\n            fun topicSubscriptions(vararg values: String): List<String> =\n                listOf(*values).also { topicSubscriptions = it }\n        }"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e7e8afca814e5fc9eb405aedd2abc805a17e0f292768e7b4f1fb513dc2980d0c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"destination\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 215,
      "offset": 24,
      "length": 11,
      "code": {
        "startLine": 213,
        "length": 11,
        "offset": 110,
        "surroundingCode": "        @AsyncApiComponent\n        class DestinationsList : ArrayList<Destination>() {\n            inline fun destination(build: Destination.() -> Unit): Destination =\n                Destination().apply(build).also { add(it) }\n        }"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a3c267f31f296a4620bf2efdb9b96464405911380e47208b594f2c1a8064ea34"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"accessType\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 251,
      "offset": 17,
      "length": 10,
      "code": {
        "startLine": 249,
        "length": 10,
        "offset": 82,
        "surroundingCode": "                listOf(*values).also { topicSubscriptions = it }\n\n            fun accessType(value: String): String =\n                value.also { accessType = it }\n        }"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "06935a2097df94bd16f8ce5ade221e0c7eaf56313aecc58106766fdde4313e1e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"amqp1\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 48,
        "length": 5,
        "offset": 80,
        "surroundingCode": "        OperationBinding.AMQP().apply(build).also { amqp = it }\n\n    inline fun amqp1(build: OperationBinding.AMQP1.() -> Unit): OperationBinding.AMQP1 =\n        OperationBinding.AMQP1.apply(build).also { amqp1 = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "0b8184c67e7e0b86bb6e4e7d9304203501b6c8bf2d953b29c9759a8310936201"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"ack\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 170,
      "offset": 13,
      "length": 3,
      "code": {
        "startLine": 168,
        "length": 3,
        "offset": 55,
        "surroundingCode": "            value.also { timestamp = it }\n\n        fun ack(value: Boolean): Boolean =\n            value.also { ack = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "cbeeb741941afdc84ffcd1b248f8464227a4fd3810fd6125145e033e8463bd17"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"cc\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 149,
      "offset": 13,
      "length": 2,
      "code": {
        "startLine": 147,
        "length": 2,
        "offset": 52,
        "surroundingCode": "            value.also { userId = it }\n\n        fun cc(vararg values: String): List<String> =\n            listOf(*values).also { cc = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "c7d092e4fe5828c022896215f382b80e467b15484108353d3aa8f503b8fb5b7a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"replyTo\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 164,
      "offset": 13,
      "length": 7,
      "code": {
        "startLine": 162,
        "length": 7,
        "offset": 59,
        "surroundingCode": "            listOf(*values).also { bcc = it }\n\n        fun replyTo(value: String): String =\n            value.also { replyTo = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "24959031d0e0d06980327f70d579c8d357f7e33c8dd8dc594052ab380686a4cc"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"expiration\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 143,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 141,
        "length": 10,
        "offset": 56,
        "surroundingCode": "        var bindingVersion: String? = null\n\n        fun expiration(value: Int): Int =\n            value.also { expiration = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "84472ed541b3bea4849f7c570d88c5e4270ceb1abbe0c8c56defb6230acd20be"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"bcc\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 161,
      "offset": 13,
      "length": 3,
      "code": {
        "startLine": 159,
        "length": 3,
        "offset": 55,
        "surroundingCode": "            value.also { mandatory = it }\n\n        fun bcc(vararg values: String): List<String> =\n            listOf(*values).also { bcc = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e1eb710a5e33950bb146503e89a47f416d643db68b9144d3c2076888ff9bdf53"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"groupIdRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 117,
      "offset": 20,
      "length": 10,
      "code": {
        "startLine": 115,
        "length": 10,
        "offset": 76,
        "surroundingCode": "            Schema().apply(build).also { groupId = it }\n\n        inline fun groupIdRef(build: Reference.() -> Unit): Reference =\n            Reference().apply(build).also { groupId = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "814f4b2735f6b0c1ceab24485536c5c30810fc6e0417319257a8f01a42a5e859"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"queue\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 196,
      "offset": 13,
      "length": 5,
      "code": {
        "startLine": 194,
        "length": 5,
        "offset": 56,
        "surroundingCode": "        var bindingVersion: String? = null\n\n        fun queue(value: String): String =\n            value.also { queue = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "47f841443e9dff244547556c6e8ea92b6f0893bfce8a59cb945d972ca8f0e9c4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"mercure\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 80,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 78,
        "length": 7,
        "offset": 80,
        "surroundingCode": "        OperationBinding.Redis.apply(build).also { redis = it }\n\n    inline fun mercure(build: OperationBinding.Mercure.() -> Unit): OperationBinding.Mercure =\n        OperationBinding.Mercure.apply(build).also { mercure = it }\n}"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "feefd755050406a6f083629572f9c1785f1ee4a8fd8658b38d6851f4cd9ce5fe"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"topic\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 235,
      "offset": 24,
      "length": 5,
      "code": {
        "startLine": 233,
        "length": 5,
        "offset": 81,
        "surroundingCode": "                Queue().apply(build).also { queue = it }\n\n            inline fun topic(build: Topic.() -> Unit): Topic =\n                Topic().apply(build).also { topic = it }\n        }"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a47e30ebe6ca43b5141ed8857a0660cdedff8b3aeb5257136eb10b7efdd5682b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"queryRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 102,
      "offset": 20,
      "length": 8,
      "code": {
        "startLine": 100,
        "length": 8,
        "offset": 74,
        "surroundingCode": "            Schema().apply(build).also { query = it }\n\n        inline fun queryRef(build: Reference.() -> Unit): Reference =\n            Reference().apply(build).also { query = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a353cb106a83dddd83860273944b3f6e22d6038270991e7387df21b25c1dc145"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"amqp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 16,
      "length": 4,
      "code": {
        "startLine": 45,
        "length": 4,
        "offset": 90,
        "surroundingCode": "        OperationBinding.AnypointMQ.apply(build).also { anypointmq = it }\n\n    inline fun amqp(build: OperationBinding.AMQP.() -> Unit): OperationBinding.AMQP =\n        OperationBinding.AMQP().apply(build).also { amqp = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f4120be0feebfc120a4b092777c647e1e9794e1a5689fe7beb0c872156f31afb"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"queue\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 232,
      "offset": 24,
      "length": 5,
      "code": {
        "startLine": 230,
        "length": 5,
        "offset": 73,
        "surroundingCode": "                value.also { deliveryMode = it }\n\n            inline fun queue(build: Queue.() -> Unit): Queue =\n                Queue().apply(build).also { queue = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f679a0d8e8a3844a5010f5120271021543f3b74fb5a5522e2ef84a465950f992"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"kafka\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 41,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 39,
        "length": 5,
        "offset": 82,
        "surroundingCode": "        OperationBinding.WebSockets.apply(build).also { ws = it }\n\n    inline fun kafka(build: OperationBinding.Kafka.() -> Unit): OperationBinding.Kafka =\n        OperationBinding.Kafka().apply(build).also { kafka = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "801caf7776d42221b1a8dba99b751759faeb7f58868a406632dd710761bdc571"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"jms\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 62,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 60,
        "length": 3,
        "offset": 80,
        "surroundingCode": "        OperationBinding.NATS().apply(build).also { nats = it }\n\n    inline fun jms(build: OperationBinding.JMS.() -> Unit): OperationBinding.JMS =\n        OperationBinding.JMS.apply(build).also { jms = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7360f798cedbd972ebded01e554dfc926cfa4c3cbeacdbd96fe54b3c0efd7132"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"mqtt5\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 54,
        "length": 5,
        "offset": 80,
        "surroundingCode": "        OperationBinding.MQTT().apply(build).also { mqtt = it }\n\n    inline fun mqtt5(build: OperationBinding.MQTT5.() -> Unit): OperationBinding.MQTT5 =\n        OperationBinding.MQTT5.apply(build).also { mqtt5 = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "c482a1f55bebe5cd8543737146e88e54613b83d8e29400599fb1e9fa0d2d33ea"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"timestamp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 167,
      "offset": 13,
      "length": 9,
      "code": {
        "startLine": 165,
        "length": 9,
        "offset": 53,
        "surroundingCode": "            value.also { replyTo = it }\n\n        fun timestamp(value: Boolean): Boolean =\n            value.also { timestamp = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "452190fcf6ba2270b52cf38f54edf9bc397b7757069f04b2d03457d887758da9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"solace\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 68,
      "offset": 16,
      "length": 6,
      "code": {
        "startLine": 66,
        "length": 6,
        "offset": 76,
        "surroundingCode": "        OperationBinding.SNS.apply(build).also { sns = it }\n\n    inline fun solace(build: OperationBinding.Solace.() -> Unit): OperationBinding.Solace =\n        OperationBinding.Solace().apply(build).also { solace = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "639ac181f2e1130dd7dccf663e8ff137a0514bb2a07a4287cb160294e395c45f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"userId\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 146,
      "offset": 13,
      "length": 6,
      "code": {
        "startLine": 144,
        "length": 6,
        "offset": 56,
        "surroundingCode": "            value.also { expiration = it }\n\n        fun userId(value: String): String =\n            value.also { userId = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e3edca9090dcefe6f83f1b186bcd19a3eabdaf1696c116524e32c02440c7d39e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"sqs\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 71,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 69,
        "length": 3,
        "offset": 84,
        "surroundingCode": "        OperationBinding.Solace().apply(build).also { solace = it }\n\n    inline fun sqs(build: OperationBinding.SQS.() -> Unit): OperationBinding.SQS =\n        OperationBinding.SQS.apply(build).also { sqs = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "cd464412ef5d8facfb8d192341c227c9422370cd4388659b93b33d381a56cefb"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"topicSubscriptions\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 248,
      "offset": 17,
      "length": 18,
      "code": {
        "startLine": 246,
        "length": 18,
        "offset": 58,
        "surroundingCode": "                value.also { name = it }\n\n            fun topicSubscriptions(vararg values: String): List<String> =\n                listOf(*values).also { topicSubscriptions = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "b04f40d929acd7a69ac15bcededfdc50309fbf0d66b455d0ae5a28b0acd21a1b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"redis\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 77,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 75,
        "length": 5,
        "offset": 80,
        "surroundingCode": "        OperationBinding.STOMP.apply(build).also { stomp = it }\n\n    inline fun redis(build: OperationBinding.Redis.() -> Unit): OperationBinding.Redis =\n        OperationBinding.Redis.apply(build).also { redis = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6b582f093c2510661e80c4de31a7835ea65edda423fa036a9ee217a2ab8bdfb2"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"nats\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 59,
      "offset": 16,
      "length": 4,
      "code": {
        "startLine": 57,
        "length": 4,
        "offset": 80,
        "surroundingCode": "        OperationBinding.MQTT5.apply(build).also { mqtt5 = it }\n\n    inline fun nats(build: OperationBinding.NATS.() -> Unit): OperationBinding.NATS =\n        OperationBinding.NATS().apply(build).also { nats = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a6bb4f15f90f99da71649aad2a5fcf32143d3fcd48755fbd0ba16609000304f9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"deliveryMode\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 229,
      "offset": 17,
      "length": 12,
      "code": {
        "startLine": 227,
        "length": 12,
        "offset": 69,
        "surroundingCode": "                value.also { destinationType = it }\n\n            fun deliveryMode(value: String): String =\n                value.also { deliveryMode = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "251a78e325e37d7cb613252cc7a3c23b7d7678c2cd2f53d7f82c4f8351bbcd21"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"clientId\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 120,
      "offset": 20,
      "length": 8,
      "code": {
        "startLine": 118,
        "length": 8,
        "offset": 79,
        "surroundingCode": "            Reference().apply(build).also { groupId = it }\n\n        inline fun clientId(build: Schema.() -> Unit): Schema =\n            Schema().apply(build).also { clientId = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e59b9f502c1fecc6bea2753b17d8a20f5adaddb0d2923b68f296911c8382ea1b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"ws\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 16,
      "length": 2,
      "code": {
        "startLine": 36,
        "length": 2,
        "offset": 80,
        "surroundingCode": "        OperationBinding.HTTP().apply(build).also { http = it }\n\n    inline fun ws(build: OperationBinding.WebSockets.() -> Unit): OperationBinding.WebSockets =\n        OperationBinding.WebSockets.apply(build).also { ws = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "ab5cc34b278dbcc29db640a8690f94b1fad5e48b227f128f378e65eb38bbc63c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"priority\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 152,
      "offset": 13,
      "length": 8,
      "code": {
        "startLine": 150,
        "length": 8,
        "offset": 58,
        "surroundingCode": "            listOf(*values).also { cc = it }\n\n        fun priority(value: Int): Int =\n            value.also { priority = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "c9e07fa0c2ea8b73cde8d1ad1e73cde0832d3177d30f09a184adb36b0f2dbbd3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"destinations\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 210,
      "offset": 20,
      "length": 12,
      "code": {
        "startLine": 208,
        "length": 12,
        "offset": 67,
        "surroundingCode": "            value.also { bindingVersion = it }\n\n        inline fun destinations(build: DestinationsList.() -> Unit): DestinationsList =\n            DestinationsList().apply(build).also { destinations = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "dd39cebb7d06cc9a3ee7481744a788d7e85435c00ace089a13e1725603afe46f"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"anypointmq\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 44,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 42,
        "length": 10,
        "offset": 82,
        "surroundingCode": "        OperationBinding.Kafka().apply(build).also { kafka = it }\n\n    inline fun anypointmq(build: OperationBinding.AnypointMQ.() -> Unit): OperationBinding.AnypointMQ =\n        OperationBinding.AnypointMQ.apply(build).also { anypointmq = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "ccc2f0ae56d7ce6c50493aa4cf4a7b0e91cffd7160220f27177af5c641baeca2"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"destinationType\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 226,
      "offset": 17,
      "length": 15,
      "code": {
        "startLine": 224,
        "length": 15,
        "offset": 54,
        "surroundingCode": "            var topic: Topic? = null\n\n            fun destinationType(value: String): String =\n                value.also { destinationType = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "3e5dd6aeee2fef55886aaf901c0b58d8f52dfb9193904c5fdfa7722ae9d67d48"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"clientIdRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 123,
      "offset": 20,
      "length": 11,
      "code": {
        "startLine": 121,
        "length": 11,
        "offset": 77,
        "surroundingCode": "            Schema().apply(build).also { clientId = it }\n\n        inline fun clientIdRef(build: Reference.() -> Unit): Reference =\n            Reference().apply(build).also { clientId = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "71f485f443461d38ebec39f1230e00c22c3609590c24b871f968c2b9dc2e5608"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"method\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/OperationBinding.kt",
      "language": "kotlin",
      "line": 96,
      "offset": 13,
      "length": 6,
      "code": {
        "startLine": 94,
        "length": 6,
        "offset": 50,
        "surroundingCode": "            value.also { type = it }\n\n        fun method(value: String): String =\n            value.also { method = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "65dc17ec172319f8473e8515d64b89eb06a79527fc665ec77a044acda24453d6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"amqp1\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 50,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 48,
        "length": 5,
        "offset": 75,
        "surroundingCode": "        ServerBinding.AMQP.apply(build).also { amqp = it }\n\n    inline fun amqp1(build: ServerBinding.AMQP1.() -> Unit): ServerBinding.AMQP1 =\n        ServerBinding.AMQP1.apply(build).also { amqp1 = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "4bb4438194f1b106b50f870ca35ea1aa11f430cc4a81f93c6a58e729e7920bf4"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"kafka\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 41,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 39,
        "length": 5,
        "offset": 79,
        "surroundingCode": "        ServerBinding.WebSockets.apply(build).also { ws = it }\n\n    inline fun kafka(build: ServerBinding.Kafka.() -> Unit): ServerBinding.Kafka =\n        ServerBinding.Kafka.apply(build).also { kafka = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "77deb98065c1896da5abf79a7bc3c5415d28f9df7f11977baa57d790d78c4d4a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"nats\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 59,
      "offset": 16,
      "length": 4,
      "code": {
        "startLine": 57,
        "length": 4,
        "offset": 77,
        "surroundingCode": "        ServerBinding.MQTT5.apply(build).also { mqtt5 = it }\n\n    inline fun nats(build: ServerBinding.NATS.() -> Unit): ServerBinding.NATS =\n        ServerBinding.NATS.apply(build).also { nats = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "380eff153b498f44b4a41fa67c0ccfad90312bf88c8647ada50903f59c0f2c8d"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"groupId\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 151,
      "offset": 13,
      "length": 7,
      "code": {
        "startLine": 149,
        "length": 7,
        "offset": 56,
        "surroundingCode": "        var bindingVersion: String? = null\n\n        fun groupId(value: String): String =\n            value.also { groupId = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "8f02b0ea1083ec8565f6cb73c3568836493be8f80b4d621641222a452b7deac6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"mqtt5\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 56,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 54,
        "length": 5,
        "offset": 77,
        "surroundingCode": "        ServerBinding.MQTT().apply(build).also { mqtt = it }\n\n    inline fun mqtt5(build: ServerBinding.MQTT5.() -> Unit): ServerBinding.MQTT5 =\n        ServerBinding.MQTT5.apply(build).also { mqtt5 = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "ea554296bdbc13bcbe0500d8c5a17f3d1bd0699235fcb59c2ddd5a0948dbd32e"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"jms\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 62,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 60,
        "length": 3,
        "offset": 75,
        "surroundingCode": "        ServerBinding.NATS.apply(build).also { nats = it }\n\n    inline fun jms(build: ServerBinding.JMS.() -> Unit): ServerBinding.JMS =\n        ServerBinding.JMS.apply(build).also { jms = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "dba36d5edcc4e2fab26944410d26b3e4a3226eae24f0be26b51806232bb03ee3"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"mercure\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 80,
      "offset": 16,
      "length": 7,
      "code": {
        "startLine": 78,
        "length": 7,
        "offset": 77,
        "surroundingCode": "        ServerBinding.Redis.apply(build).also { redis = it }\n\n    inline fun mercure(build: ServerBinding.Mercure.() -> Unit): ServerBinding.Mercure =\n        ServerBinding.Mercure.apply(build).also { mercure = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "1e93ed3efe00d19096cc9dc1be65cdbc909b6dd9900abcd452f2bf5c0f8431a9"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"heartBeatInterval\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 163,
      "offset": 13,
      "length": 17,
      "code": {
        "startLine": 161,
        "length": 17,
        "offset": 65,
        "surroundingCode": "            value.also { multiEndpointServer = it }\n\n        fun heartBeatInterval(value: Int): Int =\n            value.also { heartBeatInterval = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "e6c0ad2acf7609bb3ce8fab278dfcc7f091d0e5f3789b1fdff75176f9c677fea"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"msgVpn\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 139,
      "offset": 13,
      "length": 6,
      "code": {
        "startLine": 137,
        "length": 6,
        "offset": 60,
        "surroundingCode": "            value.also { bindingVersion = it }\n\n        fun msgVpn(value: String): String =\n            value.also { msgVpn = it }\n    }"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "3e637c40ec21cd86ab5e77c45255a4d102581e9f9f64f1842b533f1c1ebe1581"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"redis\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 77,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 75,
        "length": 5,
        "offset": 77,
        "surroundingCode": "        ServerBinding.STOMP.apply(build).also { stomp = it }\n\n    inline fun redis(build: ServerBinding.Redis.() -> Unit): ServerBinding.Redis =\n        ServerBinding.Redis.apply(build).also { redis = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "5cfb0ab662cc757f05a2fc094c62905d5c3c57003b551bc4937f0e18d9c65cda"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"ws\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 38,
      "offset": 16,
      "length": 2,
      "code": {
        "startLine": 36,
        "length": 2,
        "offset": 75,
        "surroundingCode": "        ServerBinding.HTTP.apply(build).also { http = it }\n\n    inline fun ws(build: ServerBinding.WebSockets.() -> Unit): ServerBinding.WebSockets =\n        ServerBinding.WebSockets.apply(build).also { ws = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "55291e0ff5cc7113a8b6da18877c2ab50b40e0da69dd4fc7430cb961a9035674"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"ibmmq\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 83,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 81,
        "length": 5,
        "offset": 81,
        "surroundingCode": "        ServerBinding.Mercure.apply(build).also { mercure = it }\n\n    inline fun ibmmq(build: ServerBinding.IBMMQ.() -> Unit): ServerBinding.IBMMQ =\n        ServerBinding.IBMMQ().apply(build).also { ibmmq = it }\n}"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "f2abdb6b6c3f6e3adf4ea4b6df63a13c3bb00583c8a0c96eeea91a726ff33253"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"multiEndpointServer\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 160,
      "offset": 13,
      "length": 19,
      "code": {
        "startLine": 158,
        "length": 19,
        "offset": 56,
        "surroundingCode": "            value.also { cipherSpec = it }\n\n        fun multiEndpointServer(value: Boolean): Boolean =\n            value.also { multiEndpointServer = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "7e7c193309b4741d8ddd418e5256f5209df942af5c90939735c8b158cb2e92c6"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"amqp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 47,
      "offset": 16,
      "length": 4,
      "code": {
        "startLine": 45,
        "length": 4,
        "offset": 87,
        "surroundingCode": "        ServerBinding.AnypointMQ.apply(build).also { anypointmq = it }\n\n    inline fun amqp(build: ServerBinding.AMQP.() -> Unit): ServerBinding.AMQP =\n        ServerBinding.AMQP.apply(build).also { amqp = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "19c36b704ada6719c8ddd098fc5a6b87fcfe64ee6357c8f62690cb547e58307a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"stomp\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 74,
      "offset": 16,
      "length": 5,
      "code": {
        "startLine": 72,
        "length": 5,
        "offset": 73,
        "surroundingCode": "        ServerBinding.SQS.apply(build).also { sqs = it }\n\n    inline fun stomp(build: ServerBinding.STOMP.() -> Unit): ServerBinding.STOMP =\n        ServerBinding.STOMP.apply(build).also { stomp = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a83dc5f5a5abc68af774829df467aa115573f0e33387c0916e5343393b81859b"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"anypointmq\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 44,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 42,
        "length": 10,
        "offset": 77,
        "surroundingCode": "        ServerBinding.Kafka.apply(build).also { kafka = it }\n\n    inline fun anypointmq(build: ServerBinding.AnypointMQ.() -> Unit): ServerBinding.AnypointMQ =\n        ServerBinding.AnypointMQ.apply(build).also { anypointmq = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "48de78409c00eb1c87b47794d9ff03983457aff05171be789aa066728c69a15a"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"cipherSpec\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 157,
      "offset": 13,
      "length": 10,
      "code": {
        "startLine": 155,
        "length": 10,
        "offset": 66,
        "surroundingCode": "            value.also { ccdtQueueManagerName = it }\n\n        fun cipherSpec(value: String): String =\n            value.also { cipherSpec = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "8adeb22c91d6270b8fee6bf7c80c9d8e6d3bfda4506f97997361f2a3c49b9684"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"ccdtQueueManagerName\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 154,
      "offset": 13,
      "length": 20,
      "code": {
        "startLine": 152,
        "length": 20,
        "offset": 53,
        "surroundingCode": "            value.also { groupId = it }\n\n        fun ccdtQueueManagerName(value: String): String =\n            value.also { ccdtQueueManagerName = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "6ab6572cf61097c76916ae387d115916d8218b8c4d52e29716abe112e68b98eb"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"sns\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 65,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 63,
        "length": 3,
        "offset": 73,
        "surroundingCode": "        ServerBinding.JMS.apply(build).also { jms = it }\n\n    inline fun sns(build: ServerBinding.SNS.() -> Unit): ServerBinding.SNS =\n        ServerBinding.SNS.apply(build).also { sns = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "9ffa7f5514f4b00d837f362d42c3858c859019ed9d752d4f0aa90ddc285d052c"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"sqs\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 71,
      "offset": 16,
      "length": 3,
      "code": {
        "startLine": 69,
        "length": 3,
        "offset": 81,
        "surroundingCode": "        ServerBinding.Solace().apply(build).also { solace = it }\n\n    inline fun sqs(build: ServerBinding.SQS.() -> Unit): ServerBinding.SQS =\n        ServerBinding.SQS.apply(build).also { sqs = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "a3697256392726aae8a1a46d1588a0c54588bad759037fc025871eab0aad2441"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"solace\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/server/ServerBinding.kt",
      "language": "kotlin",
      "line": 68,
      "offset": 16,
      "length": 6,
      "code": {
        "startLine": 66,
        "length": 6,
        "offset": 73,
        "surroundingCode": "        ServerBinding.SNS.apply(build).also { sns = it }\n\n    inline fun solace(build: ServerBinding.Solace.() -> Unit): ServerBinding.Solace =\n        ServerBinding.Solace().apply(build).also { solace = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "d946d97e93ce08b1b29b772b73c3aa3367723d6c36079669364a920ee6ebb040"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"bindingsRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/Operation.kt",
      "language": "kotlin",
      "line": 42,
      "offset": 16,
      "length": 11,
      "code": {
        "startLine": 40,
        "length": 11,
        "offset": 80,
        "surroundingCode": "        OperationBindings().apply(build).also { bindings = it }\n\n    inline fun bindingsRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { bindings = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "86b796a441a2f112cee4986853ac687b41a2d845b47e1cc9bcd2c91a06477a20"
},{
  "tool": "Code Inspection",
  "category": "Redundant constructs",
  "type": "Unused symbol",
  "severity": "High",
  "comment": "Function \"messageRef\" is never used",
  "detailsInfo": "Reports symbols that are not used or not reachable from entry points.",
  "sources": [
    {
      "type": "file",
      "path": "kotlin-asyncapi-core/src/main/kotlin/org/openfolder/kotlinasyncapi/model/channel/Operation.kt",
      "language": "kotlin",
      "line": 51,
      "offset": 16,
      "length": 10,
      "code": {
        "startLine": 49,
        "length": 10,
        "offset": 69,
        "surroundingCode": "        Message().apply(build).also { message = it }\n\n    inline fun messageRef(build: Reference.() -> Unit): Reference =\n        Reference().apply(build).also { message = it }\n"
      }
    }
  ],
  "attributes": {
    "module": "kotlin-asyncapi-core",
    "inspectionName": "UnusedSymbol"
  },
  "hash": "eec72a29c4fef04206d9320ee43176d0f65747962011eaadf59c4ab9756fcb88"
}]}